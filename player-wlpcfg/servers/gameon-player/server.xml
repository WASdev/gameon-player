<server description="Game On! Player Service">

    <!-- Enable features -->
  <featureManager>
    <feature>cdi-1.2</feature>
    <feature>ssl-1.0</feature>
    <feature>jsonp-1.0</feature>
    <feature>jndi-1.0</feature>
    <feature>websocket-1.1</feature>
    <feature>mpMetrics-1.1</feature>
    <feature>mpHealth-1.0</feature>
    <feature>mpFaultTolerance-1.0</feature>
    <feature>mpOpenAPI-1.0</feature>
  </featureManager>

  <mpMetrics authentication="false"/>

  <keyStore id="defaultKeyStore" location="key.pkcs12"  password="gameontext-keys"/>
  <keyStore id="defaultTrustStore" location="truststore.jks" password="gameontext-trust"/>

  <sslDefault sslRef="DefaultSSLSettings"/>
  <ssl id="DefaultSSLSettings" keyStoreRef="defaultKeyStore" trustStoreRef="defaultTrustStore"/>

  <!-- To access this server from a remote client add a host attribute to
       the following element, e.g. host="*" -->
  <httpEndpoint host="*" httpPort="9080" httpsPort="9443" id="defaultHttpEndpoint" />

  <!-- Signed JWT keystore info -->
  <jndiEntry jndiName="jwtKeyStore" value="${server.config.dir}/resources/security/key.pkcs12"/>
  <jndiEntry jndiName="jwtKeyStorePassword" value="gameontext-keys"/>
  <jndiEntry jndiName="jwtKeyStoreAlias" value="default"/>

  <jndiEntry jndiName="systemId" value="${env.SYSTEM_ID}"/>
  <jndiEntry jndiName="kafkaUrl" value="${env.KAFKA_SERVICE_URL}"/>

  <!--used by LogView for basic auth -->
  <jndiEntry jndiName="mapApiKey" value="${env.MAP_KEY}"/>

  <!-- CouchDB -->
  <jndiEntry jndiName="couchdb/username" value="${env.COUCHDB_USER}"/>
  <jndiEntry jndiName="couchdb/password" value="${env.COUCHDB_PASSWORD}"/>
  <jndiEntry jndiName="couchdb/url" value="${env.COUCHDB_SERVICE_URL}"/>

  <!-- turn off polling -->
  <config updateTrigger="mbean" />
  <applicationMonitor dropinsEnabled="false" updateTrigger="mbean"/>

  <logging traceSpecification="*=info:org.gameontext.*=all"/>

  <!-- This is required to prevent the web apps from being lazily loaded -->
  <webContainer deferServletLoad="false"/>
  <!-- The JVM can get confused about available CPU in virtualized envs -->
  <executor coreThreads="5"  />

  <!-- new API as a separate war -->
  <webApplication contextRoot="/players" id="player-app" location="player-app.war">
    <classloader apiTypeVisibility="api,ibm-api,spec,stable,third-party"/>
  </webApplication>

  <jndiEntry jndiName="developmentMode" value="${env.GAMEON_MODE}"/>
  <jndiEntry jndiName="targetPlatform" value="${env.TARGET_PLATFORM}"/>
  <include location="${env.TARGET_PLATFORM}-config.xml" optional="true" />

</server>
